|experiencia_06
clk => divisor_clock:DIVISAO_CLOCK.clk_in
rst => divisor_clock:DIVISAO_CLOCK.rst
rst => serial_in:RECEPCAO.reset
start => serial_in:RECEPCAO.start
entrada_serial => serial_in:RECEPCAO.serial_data
done << serial_in:RECEPCAO.done
parity_bit << serial_in:RECEPCAO.parity_bit
parallel_data[0] << <GND>
parallel_data[1] << <GND>
parallel_data[2] << <GND>
parallel_data[3] << <GND>
parallel_data[4] << <GND>
parallel_data[5] << <GND>
parallel_data[6] << <GND>
parallel_data[7] << <GND>
HEX0[0] << hex2seg:SEGUNDO_CARACTERE.seg[0]
HEX0[1] << hex2seg:SEGUNDO_CARACTERE.seg[1]
HEX0[2] << hex2seg:SEGUNDO_CARACTERE.seg[2]
HEX0[3] << hex2seg:SEGUNDO_CARACTERE.seg[3]
HEX0[4] << hex2seg:SEGUNDO_CARACTERE.seg[4]
HEX0[5] << hex2seg:SEGUNDO_CARACTERE.seg[5]
HEX0[6] << hex2seg:SEGUNDO_CARACTERE.seg[6]
HEX1[0] << hex2seg:PRIMEIRO_CARACTERE.seg[0]
HEX1[1] << hex2seg:PRIMEIRO_CARACTERE.seg[1]
HEX1[2] << hex2seg:PRIMEIRO_CARACTERE.seg[2]
HEX1[3] << hex2seg:PRIMEIRO_CARACTERE.seg[3]
HEX1[4] << hex2seg:PRIMEIRO_CARACTERE.seg[4]
HEX1[5] << hex2seg:PRIMEIRO_CARACTERE.seg[5]
HEX1[6] << hex2seg:PRIMEIRO_CARACTERE.seg[6]


|experiencia_06|divisor_clock:DIVISAO_CLOCK
clk_in => internal.CLK
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
rst => internal.ACLR
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
clk_out <= internal.DB_MAX_OUTPUT_PORT_TYPE


|experiencia_06|serial_in:RECEPCAO
clock => shift_register:DATA_STORAGE.clock
clock => receive_count[0].CLK
clock => receive_count[1].CLK
clock => receive_count[2].CLK
clock => receive_count[3].CLK
clock => receive_count[4].CLK
clock => receive_count[5].CLK
clock => receive_count[6].CLK
clock => receive_count[7].CLK
clock => receive_count[8].CLK
clock => receive_count[9].CLK
clock => receive_count[10].CLK
clock => receive_count[11].CLK
clock => receive_count[12].CLK
clock => receive_count[13].CLK
clock => receive_count[14].CLK
clock => receive_count[15].CLK
clock => receive_count[16].CLK
clock => receive_count[17].CLK
clock => receive_count[18].CLK
clock => receive_count[19].CLK
clock => receive_count[20].CLK
clock => receive_count[21].CLK
clock => receive_count[22].CLK
clock => receive_count[23].CLK
clock => receive_count[24].CLK
clock => receive_count[25].CLK
clock => receive_count[26].CLK
clock => receive_count[27].CLK
clock => receive_count[28].CLK
clock => receive_count[29].CLK
clock => receive_count[30].CLK
clock => enable_shift.CLK
clock => parallel_intern2[2].CLK
clock => parallel_intern2[3].CLK
clock => parallel_intern2[4].CLK
clock => parallel_intern2[5].CLK
clock => parallel_intern2[6].CLK
clock => parallel_intern2[7].CLK
clock => parallel_intern2[8].CLK
clock => parallel_intern2[9].CLK
clock => parallel_intern2[10].CLK
clock => done~reg0.CLK
clock => clock_count[0].CLK
clock => clock_count[1].CLK
clock => estado~4.DATAIN
reset => TICK_PROCESS.IN1
reset => done~reg0.ACLR
reset => estado~6.DATAIN
reset => parallel_intern2[10].ENA
reset => parallel_intern2[9].ENA
reset => parallel_intern2[8].ENA
reset => parallel_intern2[7].ENA
reset => parallel_intern2[6].ENA
reset => parallel_intern2[5].ENA
reset => parallel_intern2[4].ENA
reset => parallel_intern2[3].ENA
reset => parallel_intern2[2].ENA
reset => enable_shift.ENA
reset => receive_count[30].ENA
reset => receive_count[29].ENA
reset => receive_count[28].ENA
reset => receive_count[27].ENA
reset => receive_count[26].ENA
reset => receive_count[25].ENA
reset => receive_count[24].ENA
reset => receive_count[23].ENA
reset => receive_count[22].ENA
reset => receive_count[21].ENA
reset => receive_count[20].ENA
reset => receive_count[19].ENA
reset => receive_count[18].ENA
reset => receive_count[17].ENA
reset => receive_count[16].ENA
reset => receive_count[15].ENA
reset => receive_count[14].ENA
reset => receive_count[13].ENA
reset => receive_count[12].ENA
reset => receive_count[11].ENA
reset => receive_count[10].ENA
reset => receive_count[9].ENA
reset => receive_count[8].ENA
reset => receive_count[7].ENA
reset => receive_count[6].ENA
reset => receive_count[5].ENA
reset => receive_count[4].ENA
reset => receive_count[3].ENA
reset => receive_count[2].ENA
reset => receive_count[1].ENA
reset => receive_count[0].ENA
start => Selector2.IN2
start => Selector1.IN2
serial_data => parallel_intern2.DATAB
serial_data => Selector2.IN3
serial_data => shift_register:DATA_STORAGE.serial_in
serial_data => Selector3.IN1
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
parity_bit <= parallel_intern2[10].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[0] <= parallel_intern2[2].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[1] <= parallel_intern2[3].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[2] <= parallel_intern2[4].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[3] <= parallel_intern2[5].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[4] <= parallel_intern2[6].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[5] <= parallel_intern2[7].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[6] <= parallel_intern2[8].DB_MAX_OUTPUT_PORT_TYPE
parallel_data[7] <= parallel_intern2[9].DB_MAX_OUTPUT_PORT_TYPE


|experiencia_06|serial_in:RECEPCAO|shift_register:DATA_STORAGE
clock => data[0].CLK
clock => data[1].CLK
clock => data[2].CLK
clock => data[3].CLK
clock => data[4].CLK
clock => data[5].CLK
clock => data[6].CLK
clock => data[7].CLK
clock => data[8].CLK
clock => data[9].CLK
clock => data[10].CLK
reset => data[0].PRESET
reset => data[1].PRESET
reset => data[2].PRESET
reset => data[3].PRESET
reset => data[4].PRESET
reset => data[5].PRESET
reset => data[6].PRESET
reset => data[7].PRESET
reset => data[8].PRESET
reset => data[9].PRESET
reset => data[10].PRESET
serial_in => data[10].DATAIN
enable => data[0].ENA
enable => data[10].ENA
enable => data[9].ENA
enable => data[8].ENA
enable => data[7].ENA
enable => data[6].ENA
enable => data[5].ENA
enable => data[4].ENA
enable => data[3].ENA
enable => data[2].ENA
enable => data[1].ENA
data_out[0] <= data[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data[8].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data[9].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data[10].DB_MAX_OUTPUT_PORT_TYPE


|experiencia_06|hex2seg:SEGUNDO_CARACTERE
hex[0] => Equal0.IN3
hex[0] => Equal1.IN0
hex[0] => Equal2.IN3
hex[0] => Equal3.IN1
hex[0] => Equal4.IN3
hex[0] => Equal5.IN1
hex[0] => Equal6.IN3
hex[0] => Equal7.IN2
hex[0] => Equal8.IN3
hex[0] => Equal9.IN1
hex[0] => Equal10.IN3
hex[0] => Equal11.IN2
hex[0] => Equal12.IN3
hex[0] => Equal13.IN2
hex[0] => Equal14.IN3
hex[0] => Equal15.IN3
hex[1] => Equal0.IN2
hex[1] => Equal1.IN3
hex[1] => Equal2.IN0
hex[1] => Equal3.IN0
hex[1] => Equal4.IN2
hex[1] => Equal5.IN3
hex[1] => Equal6.IN1
hex[1] => Equal7.IN1
hex[1] => Equal8.IN2
hex[1] => Equal9.IN3
hex[1] => Equal10.IN1
hex[1] => Equal11.IN1
hex[1] => Equal12.IN2
hex[1] => Equal13.IN3
hex[1] => Equal14.IN2
hex[1] => Equal15.IN2
hex[2] => Equal0.IN1
hex[2] => Equal1.IN2
hex[2] => Equal2.IN2
hex[2] => Equal3.IN3
hex[2] => Equal4.IN0
hex[2] => Equal5.IN0
hex[2] => Equal6.IN0
hex[2] => Equal7.IN0
hex[2] => Equal8.IN1
hex[2] => Equal9.IN2
hex[2] => Equal10.IN2
hex[2] => Equal11.IN3
hex[2] => Equal12.IN1
hex[2] => Equal13.IN1
hex[2] => Equal14.IN1
hex[2] => Equal15.IN1
hex[3] => Equal0.IN0
hex[3] => Equal1.IN1
hex[3] => Equal2.IN1
hex[3] => Equal3.IN2
hex[3] => Equal4.IN1
hex[3] => Equal5.IN2
hex[3] => Equal6.IN2
hex[3] => Equal7.IN3
hex[3] => Equal8.IN0
hex[3] => Equal9.IN0
hex[3] => Equal10.IN0
hex[3] => Equal11.IN0
hex[3] => Equal12.IN0
hex[3] => Equal13.IN0
hex[3] => Equal14.IN0
hex[3] => Equal15.IN0
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|experiencia_06|hex2seg:PRIMEIRO_CARACTERE
hex[0] => Equal0.IN3
hex[0] => Equal1.IN0
hex[0] => Equal2.IN3
hex[0] => Equal3.IN1
hex[0] => Equal4.IN3
hex[0] => Equal5.IN1
hex[0] => Equal6.IN3
hex[0] => Equal7.IN2
hex[0] => Equal8.IN3
hex[0] => Equal9.IN1
hex[0] => Equal10.IN3
hex[0] => Equal11.IN2
hex[0] => Equal12.IN3
hex[0] => Equal13.IN2
hex[0] => Equal14.IN3
hex[0] => Equal15.IN3
hex[1] => Equal0.IN2
hex[1] => Equal1.IN3
hex[1] => Equal2.IN0
hex[1] => Equal3.IN0
hex[1] => Equal4.IN2
hex[1] => Equal5.IN3
hex[1] => Equal6.IN1
hex[1] => Equal7.IN1
hex[1] => Equal8.IN2
hex[1] => Equal9.IN3
hex[1] => Equal10.IN1
hex[1] => Equal11.IN1
hex[1] => Equal12.IN2
hex[1] => Equal13.IN3
hex[1] => Equal14.IN2
hex[1] => Equal15.IN2
hex[2] => Equal0.IN1
hex[2] => Equal1.IN2
hex[2] => Equal2.IN2
hex[2] => Equal3.IN3
hex[2] => Equal4.IN0
hex[2] => Equal5.IN0
hex[2] => Equal6.IN0
hex[2] => Equal7.IN0
hex[2] => Equal8.IN1
hex[2] => Equal9.IN2
hex[2] => Equal10.IN2
hex[2] => Equal11.IN3
hex[2] => Equal12.IN1
hex[2] => Equal13.IN1
hex[2] => Equal14.IN1
hex[2] => Equal15.IN1
hex[3] => Equal0.IN0
hex[3] => Equal1.IN1
hex[3] => Equal2.IN1
hex[3] => Equal3.IN2
hex[3] => Equal4.IN1
hex[3] => Equal5.IN2
hex[3] => Equal6.IN2
hex[3] => Equal7.IN3
hex[3] => Equal8.IN0
hex[3] => Equal9.IN0
hex[3] => Equal10.IN0
hex[3] => Equal11.IN0
hex[3] => Equal12.IN0
hex[3] => Equal13.IN0
hex[3] => Equal14.IN0
hex[3] => Equal15.IN0
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


